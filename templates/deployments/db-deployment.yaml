apiVersion: apps/v1
kind: Deployment
metadata:
    # annotations:
    #     io.rancher.container.pull_image: always
    #     io.rancher.scheduler.affinity:host_label: geonode.production=geonode
    #     kompose.cmd: ./migration-tools-0.1.3 parse --docker-file export/scanterra.PROD/scanagroempresa/docker-compose.yml
    #         --rancher-file export/scanterra.PROD/scanagroempresa/rancher-compose.yml
    #         --output-file parse2-scanagroempresa.PROD
    #     kompose.version: 1.21.0 (992df58d8)
    #     org.geonode.component: db
    #     org.geonode.instance.name: geonode
    # creationTimestamp: null
    labels:
        io.kompose.service: db
        org.geonode.component: db # tomada de las annotations
        org.geonode.instance.name: geonode # tomada de las annotations
    name: db
    namespace: scangroempresa
spec:
    replicas: 1
    selector:
        matchLabels:
            io.kompose.service: db
    strategy:
        type: Recreate
    template:
        metadata:
            # annotations:
            #     io.rancher.container.pull_image: always
            #     io.rancher.scheduler.affinity:host_label: geonode.production=geonode
            #     kompose.cmd: ./migration-tools-0.1.3 parse --docker-file export/scanterra.PROD/scanagroempresa/docker-compose.yml
            #         --rancher-file export/scanterra.PROD/scanagroempresa/rancher-compose.yml
            #         --output-file parse2-scanagroempresa.PROD
            #     kompose.version: 1.21.0 (992df58d8)
            #     org.geonode.component: db
            #     org.geonode.instance.name: geonode
            # creationTimestamp: null
            labels:
                io.kompose.service: db
        spec:
            imagePullSecrets:
            - name: dockerhub
            containers:
              - env:
                  - name: GEONODE_DATABASE
                    value: geonode
                  - name: GEONODE_DATABASE_PASSWORD
                    value: geonode
                  - name: GEONODE_GEODATABASE
                    value: geonode_data
                  - name: GEONODE_GEODATABASE_PASSWORD
                    value: geonode_data
                image: scanterra/postgis-docker:develop
                imagePullPolicy: Always
                name: db
                resources: {}
                stdin: true
                volumeMounts:
                  - mountPath: /var/lib/postgresql/data
                    name: scanagroempresa-dbdata
                  - mountPath: /pg_backups
                    name: scanagroempresa-dbbackups
            restartPolicy: Always
            serviceAccountName: ""
            volumes:
              - name: scanagroempresa-dbdata
                persistentVolumeClaim:
                    claimName: scanagroempresa-dbdata
              - name: scanagroempresa-dbbackups
                persistentVolumeClaim:
                    claimName: scanagroempresa-dbbackups
            affinity:
              nodeAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  nodeSelectorTerms:
                    - matchExpressions:
                      - key: geonode.production
                        operator: In
                        values:
                        - geonode
status: {}
